"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var constants_1 = require("../constants");
var storage_1 = require("../utils/storage");
/** TEMPORARY MOCKS */
var index_1 = require("../api/node/index");
function getAsset(id) {
    return index_1.v1.transactions.get(id).then(function (assetTransaction) {
        return storage.set(id, new Asset({
            id: id,
            name: assetTransaction.name,
            precision: assetTransaction.decimals,
            description: assetTransaction.description
        }));
    });
}
var Asset = /** @class */ (function () {
    function Asset(props) {
        if (!props.id) {
            throw new Error('An attempt to create Asset without ID');
        }
        if (!props.name) {
            throw new Error('An attempt to create Asset without a name');
        }
        if (typeof props.precision !== 'number' || props.precision < 0 || props.precision > 8) {
            throw new Error("An attempt to create Asset with wrong precision (" + props.precision + ")");
        }
        this.id = props.id;
        this.name = props.name;
        this.precision = props.precision;
        this.description = props.description || '';
        this.rating = 0;
        this.ticker = '';
    }
    Asset.prototype.toString = function () {
        return this.id;
    };
    return Asset;
}());
var storage = storage_1.getStorage(function (set) {
    var wavesAsset = new Asset(constants_1.WAVES_PROPS);
    set(wavesAsset.id, wavesAsset);
});
exports.default = {
    get: function (input) {
        if (typeof input === 'string') {
            var id_1 = input;
            return storage.get(id_1).then(function (asset) {
                return asset || getAsset(id_1);
            });
        }
        else {
            var props_1 = input;
            return storage.get(props_1.id).then(function (asset) {
                return asset || storage.set(props_1.id, new Asset(props_1));
            });
        }
    },
    getKnownAssets: function () {
        return storage.getAll();
    },
    getKnownAssetsList: function () {
        return storage.getList();
    },
    clearCache: function () {
        return storage.clear();
    },
    isAsset: function (object) {
        return object instanceof Asset;
    }
};
//# sourceMappingURL=Asset.js.map