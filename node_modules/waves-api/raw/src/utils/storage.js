"use strict";
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var config_1 = require("../config");
var Storage = /** @class */ (function () {
    function Storage(init) {
        this._init = init;
        this._storages = Object.create(null);
    }
    Object.defineProperty(Storage.prototype, "currentStorage", {
        get: function () {
            return this._resolveStorage();
        },
        enumerable: true,
        configurable: true
    });
    Storage.prototype.get = function (key) {
        return Promise.resolve(this.currentStorage[key] || null);
    };
    Storage.prototype.getAll = function () {
        return Promise.resolve(__assign({}, this.currentStorage));
    };
    Storage.prototype.getList = function () {
        return this.getAll().then(function (storage) {
            var list = Object.keys(storage).map(function (key) { return storage[key]; });
            return Promise.resolve(list);
        });
    };
    Storage.prototype.set = function (key, value) {
        this.currentStorage[key] = value;
        return Promise.resolve(value);
    };
    Storage.prototype.clear = function () {
        this._storages = Object.create(null);
        return Promise.resolve(null);
    };
    Storage.prototype._resolveStorage = function () {
        var _this = this;
        var network = config_1.default.getNetworkByte();
        if (!this._storages[network]) {
            this._storages[network] = Object.create(null);
            this._init && this._init(function (key, value) {
                _this._storages[network][key] = value;
            });
        }
        return this._storages[network];
    };
    return Storage;
}());
function getStorage(init) {
    return new Storage(init);
}
exports.getStorage = getStorage;
//# sourceMappingURL=storage.js.map